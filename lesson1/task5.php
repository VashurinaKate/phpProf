<?php
/* class A {
    public function foo() {
        static $x = 0;
        echo ++$x;
    }
}
$a1 = new A();
$a2 = new A();
$a1->foo(); // Выведет 1
$a2->foo(); // Выведет 2
$a1->foo(); // Выведет 3 
$a2->foo(); // Выведет 4
// При первом вызове foo() присваивание $x выполняется только один раз,
// и далее значение переменной сохраняется и после выхода из функции
// в данном случае $x - статическая локальная переменная
*/

class A {
    public function foo() {
        static $x = 0;
        echo ++$x;
    }
}
class B extends A {
}
$a1 = new A();
$b1 = new B();
$a1->foo(); // 1
$b1->foo(); // 1
$a1->foo(); // 2
$b1->foo(); // 2
// В данном случае при наследовании создается новый метод